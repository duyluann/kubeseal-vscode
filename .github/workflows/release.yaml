name: Release and Publish Extension

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release-and-publish:
    name: Release and Publish Extension
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Build extension
        run: npm run compile

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get released version
        id: get_version
        run: |
          if [ "${{ steps.semantic.outputs.new_release_published }}" = "true" ]; then
            echo "version=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_OUTPUT
            echo "published=true" >> $GITHUB_OUTPUT
          else
            echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
            echo "published=false" >> $GITHUB_OUTPUT
          fi

      - name: Package extension (after version update)
        if: steps.get_version.outputs.published == 'true'
        run: vsce package

      - name: Upload VSIX to Release
        if: steps.get_version.outputs.published == 'true'
        run: |
          # Get the release ID for the latest release
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases/latest --jq '.id')

          # Upload the VSIX file
          gh api repos/${{ github.repository }}/releases/$RELEASE_ID/assets \
            --field name="kubeseal-vscode-${{ steps.get_version.outputs.version }}.vsix" \
            --field content_type="application/octet-stream" \
            --upload-file "./kubeseal-vscode-${{ steps.get_version.outputs.version }}.vsix"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to VS Code Marketplace
        if: env.MARKETPLACE_PAT != '' && steps.get_version.outputs.published == 'true'
        run: |
          echo "${{ secrets.MARKETPLACE_PAT }}" | vsce login devops4life
        env:
          MARKETPLACE_PAT: ${{ secrets.MARKETPLACE_PAT }}

      - name: Publish to VS Code Marketplace
        if: env.MARKETPLACE_PAT != '' && steps.get_version.outputs.published == 'true'
        run: vsce publish
        env:
          MARKETPLACE_PAT: ${{ secrets.MARKETPLACE_PAT }}

      - name: Notify success
        run: |
          echo "‚úÖ Workflow completed successfully!"
          echo "üì¶ Version: ${{ steps.get_version.outputs.version }}"
          echo "üì¶ Extension: devops4life.kubeseal-vscode"
          if [ "${{ steps.get_version.outputs.published }}" = "true" ]; then
            echo "üîó GitHub Release: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.get_version.outputs.version }}"
            echo "üîó VS Code Marketplace: https://marketplace.visualstudio.com/items?itemName=devops4life.kubeseal-vscode"
            if [ "${{ secrets.MARKETPLACE_PAT }}" != "" ]; then
              echo "‚úÖ Published to VS Code Marketplace"
            else
              echo "‚ö†Ô∏è  Skipped marketplace publishing (no PAT configured)"
            fi
          else
            echo "‚ÑπÔ∏è  No new release published (no semantic version bump)"
          fi
